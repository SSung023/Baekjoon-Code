#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
#include <map>
#include <set>

#define MAX 11 + 1
using namespace std;

int n;
long minimum = 1000000001, maximum = -1000000001;
int arr[MAX], operator_num[4];


void input(){
    cin >> n;
    for(int i = 0; i < n; i++){
        cin >> arr[i];
    }
    for(int i = 0; i < 4; i++){
        cin >> operator_num[i];
    }
}

// 몇번째 숫자까지 왔는지, 연산자는 몇 개나 썼는지
void backTracking(int num_idx, long cur){
    if(num_idx == n - 1){
        minimum = min(minimum, cur);
        maximum = max(maximum, cur);
        return;
    }

    for(int i = 0; i < 4; i++){
        if(operator_num[i] != 0){
            operator_num[i]--;
            if(i == 0){
                backTracking(num_idx + 1, cur + arr[num_idx + 1]);
            }
            else if(i == 1){
                backTracking(num_idx + 1, cur - arr[num_idx + 1]);
            }
            else if(i == 2){
                backTracking(num_idx + 1, cur * arr[num_idx + 1]);
            }
            else if(i == 3){
                backTracking(num_idx + 1, cur / arr[num_idx + 1]);
            }
            operator_num[i]++;
        }
    }
}

int main(void){

    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    input();
    backTracking(0, arr[0]);

    cout << maximum << "\n" << minimum;


    return 0;
}
